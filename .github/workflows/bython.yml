name: Bython

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-22.04
    permissions:
      packages: read
    container:
      image: ghcr.io/bython-talk/devcontainer:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: |
          cmake -D FORMAT_COMMAND=clang-format -P cmake/lint.cmake

      - name: Spell check
        if: false
        run: pip3 install codespell && cmake -P cmake/spell.cmake
  sanitize:
    needs: [lint]
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/bython-talk/devcontainer:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Tools & Sanitisers
        run: |
          apk add cmake ninja-build
      - name: Configure
        run: cmake -Wno-error=dev --preset=ci-sanitize -G Ninja

      - name: Build
        run: cmake --build build/sanitize -j 2

      - name: Test
        working-directory: build/sanitize
        env:
          ASAN_OPTIONS:  |
            strict_string_checks=1:
            detect_stack_use_after_return=1:
            check_initialization_order=1:
            strict_init_order=1:
            detect_leaks=1
          UBSAN_OPTIONS: print_stacktrace=1
        run: ctest --output-on-failure --no-tests=error -j 2
  coverage:
    needs: [lint]
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/bython-talk/devcontainer:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}

    # To enable coverage, delete the last line from the conditional below and
    # edit the "<name>" placeholder to your GitHub name.
    # If you do not wish to use codecov, then simply delete this job from the
    # workflow.
    if: github.repository_owner == 'bython-talk'

    steps:
      - uses: actions/checkout@v3
      - name: Install LCov and make
        run: |
          apk add cmake lcov make

      - name: Configure
        run: cmake -Wno-error=dev --preset=ci-coverage

      - name: Build
        run: cmake --build build/coverage -j 2

      - name: Test
        working-directory: build/coverage
        run: ctest --output-on-failure --no-tests=error -j 2

      - name: Process coverage info
        run: cmake --build build/coverage -t coverage

      - name: Submit to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/coverage/coverage.info
          fail_ci_if_error: true
  test:
    needs: [lint]

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]

    runs-on: ${{ matrix.os }}
    container:
      image: ghcr.io/bython-talk/devcontainer:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure via sh
        if: matrix.os != 'windows-2022'
        shell: /bin/sh
        run: |
          os=$(echo ${{ matrix.os }} | cut -d '-' -f 1)
          cmake -Wno-error=dev --preset=ci-$os

      - name: Build
        run: cmake --build build --config Release -j 2

      - name: Install
        run: cmake --install build --config Release --prefix prefix

      - name: Test
        working-directory: build
        run: ctest --output-on-failure --no-tests=error -C Release -j 2
  docs:
    # Deploy docs only when builds succeed
    needs: [sanitize, test]

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/bython-talk/devcontainer:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}

    # To enable, first you have to create an orphaned gh-pages branch:
    #
    #    git switch --orphan gh-pages
    #    git commit --allow-empty -m "Initial commit"
    #    git push -u origin gh-pages
    #
    # Edit the <name> placeholder below to your GitHub name, so this action
    # runs only in your repository and no one else's fork. After these, delete
    # this comment and the last line in the conditional below.
    # If you do not wish to use GitHub Pages for deploying documentation, then
    # simply delete this job similarly to the coverage one.
    if: github.ref == 'refs/heads/main'
      && github.event_name == 'push'
      && github.repository_owner == 'bython-talk'

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with: { python-version: "3.8" }

      - name: Install m.css dependencies
        run: pip3 install jinja2 Pygments

      - name: Install Doxygen
        run: apk add doxygen

      - name: Build docs
        run: cmake "-DPROJECT_SOURCE_DIR=$PWD" "-DPROJECT_BINARY_DIR=$PWD/build"
          -P cmake/docs-ci.cmake

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/docs/html
